Prerequisites

git with language aware diffs (https://urbanautomaton.com/blog/2011/07/28/git-grep-and-language-specific-diffs/)
cloc
pip install radon


# Files with the most commit
git log --format=format: --name-only | egrep -v '^$' | sort | uniq -c | sort -gr | head -25

git log other options
--after=2016-01-01
-- dir/to/limit

git rev-list

# Nombre de contributeurs
git shortlog -s | wc -l

# Comment voir les parties du fichier qui sont les plus modifiées ?
grep def <file>

# Toutes les versions d'une fonction (limits : if changed file or method with the same name as a function)
git log -L:_update_customer:src/service/NewPersonManagement.py

# Combien de commits ont modifié cette fonction (si la fonction a été renommée, il faut utiliser le nom actuel mais normalement on a l'historique complet)
git log -L:_update_customer:src/service/NewPersonManagement.py | grep 'commit ' | wc -l

# Gros contributeurs d'un fichier/dossier
git shortlog -s -- src/clouddc/ | sort -rg

# qui a modifié en dernier les lignes du fichier
git blame --line-porcelain src/service/AccessLinkManagement.py | sed -n 's/^author //p' | sort | uniq -c | sort -rn

configure .mailmap pour les gens qui ont plusieurs alias
https://github.com/git/git/blob/master/Documentation/mailmap.txt
git log --format='<%aE> %aN' | sort -u

# Date de dernière modif
git log -1 --format="%ad" --date=short -- src/service/NewPersonManagement.py

# Age median du fichier
git blame --line-porcelain src/service/AccessLinkManagement.py | sed -n 's/^committer-time //p' -> calc median then date --date='@...'
# Sur AccessLinkManagement il y a beaucoup de commits récents pour rendre le fichier compatible avec black, donc du lint et ça fausse les résultats
# mais git blame accepte un commit comme argument comme fe25b6d (ou fe25b6d^ pour dire le parent de fe25b6d) donc on peut se placer avant ça

# change coupling

# code similarity between functions

# stats for added & removed LOC
git log --numstat

cloc .  --quiet

# Split repo yes, but keep history
https://gbayer.com/development/moving-files-from-one-git-repository-to-another-preserving-history/




# Code maat

docker build -t code_maat .

generate log file
git log --all --numstat --date=short --pretty=format:'--%h--%ad--%aN' --no-renames > ../code-maat/git.log

docker run -v /home/jmaurice/code/code-maat:/data -it code_maat -l /data/git.log -c git2 -a

abs-churn, age, author-churn, authors, communication, coupling, entity-churn, entity-effort, entity-ownership, fragmentation, identity, main-dev, main-dev-by-revs, messages, refactoring-main-dev, revisions, soc, summary
